@using Web_Front.Models
@model LoginViewModel
@{
    ViewBag.Title = "Log in";
}


<div class="limiter">
    <div class="container-login100">
        <div class="container">
            <br />
            <br />
            <br />
            <div class="row">
                <div class="col-md-12 mx-auto">
                    <div class="wrap-login100">
                        <span class="login100-form-title p-b-33">
                            @ViewBag.Title
                        </span>
                        <hr />
                        <br />
                        @using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                        {
                            @Html.AntiForgeryToken()
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                            <h5 class="text-center">Log In with an existing account.</h5>

                            <div class="row">
                                <div class="col-md-9 col-sm-12">
                                    <p style="color:#909090">Please Fill In your Details </p>

                                    <div class="wrap-input100">
                                        @Html.TextBoxFor(m => m.Username, new { @class = "input100", placeholder = "Username" })
                                        @Html.ValidationMessageFor(m => m.Username, "", new { @class = "text-danger" })
                                    </div>
                                    <p style="color:#909090">User Name</p>

                                    <div class="wrap-input100 rs1">
                                        @Html.PasswordFor(m => m.Password, new { @class = "input100", placeholder = "Password" })
                                        @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                                    </div>
                                    <p style="color:#909090">Password</p>



                                    @*      reCAPTCHA V2 checkbox     *@

                                    <div class="d-flex justify-content-center align-items-center" id="reCAPTCHA_V2"></div>
                                    <input type="text" name="reCAPTCHA_Response" id="reCAPTCHA_Response" required hidden />
                                    <p class="text-center" style="color:#909090">Please Check the fact you are not an Evil Robot that wants to take over the World.</p>
                                    <br />


                                    <!-- Log In Button ----------------------------------------->
                                    <div class="container-login100-form-btn m-t-20">
                                        <button class="login100-form-btn">
                                            Sign in
                                        </button>
                                    </div>
                                    <br />

                                    <!-- Remember Me Checkbox ---------------------------------->
                                    <div class="text-center">
                                        <div class="checkbox">
                                            @Html.CheckBoxFor(m => m.RememberMe)
                                            @Html.LabelFor(m => m.RememberMe)
                                        </div>
                                    </div>


                                </div>

                                <div class="col-md-3 col-sm-6">
                                    <div class="sideImage" id="p_container">
                                        <img style="bottom:0px" class="stackImages p_child" id="slideone" src="~/images/parallax/Portrait_figure.png">
                                        <img style="bottom:0px" class="stackImages P_child" id="slidetwo" src="~/images/parallax/Portrait_boi2.png">
                                    </div>
                                </div>
                            </div>

                            // PASSWORD RECOVER -------------------------------------------------
                            @*<div class="text-center p-t-45 p-b-4">
                                        Enable this once you have account confirmation enabled for password reset functionality
                            <p>
                                @Html.ActionLink("Forgot your password?", "ForgotPassword")
                            </p>
                                    </div>*@

                        }
                    </div>
                </div>
            </div>
        </div>

        <!-- Section - Links ---------------------------------------->
        <div style="height:180px; margin-top:40px;" class="dottedFrameFixedH col-lg-6 col-md-6 col-sm-6">
            <br />
            <h5 class="text-center">Log In Using:</h5>
            <hr />
            @Html.Partial("_ExternalLoginsListPartial", new ExternalLoginListViewModel { ReturnUrl = ViewBag.ReturnUrl })
        </div>
    </div>
</div>



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    @* reCAPTCHA script *@
    <script type="text/javascript">
        var onloadCallback = function () {

            //On success reCAPTCHA submition it will return here with the user anthentication
            //will use this response to send a POST to reCAPTCHA API to ensure users validity
            var verifyCallback = function (response) {
                $('#reCAPTCHA_Response').val(response);  //Set response to hidden input field
            };

            //Set reCAPTCHA attributes
            grecaptcha.render('reCAPTCHA_V2', {
                'sitekey': '@System.Configuration.ConfigurationManager.AppSettings["sitekey"].ToString()',//Get value from Web.config
                'theme': 'dark',    //light
                'size': 'normal',     //compact
                'callback': verifyCallback,
            });
        };
    </script>
    <script src="https://www.google.com/recaptcha/api.js?onload=onloadCallback&render=explicit" async defer></script>
}
