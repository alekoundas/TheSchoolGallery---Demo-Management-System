@model Web_DomainClasses.Entities.School.School

@{
    ViewBag.Title = "Create";
}


<div class="limiter">
    <div class="container-login100">
        <div class="container">
            <br />
            <br />
            <h2 class="text-center" style="color:#f3efe9;"> Create new School</h2>
            <hr />
            <br />
            @using (Html.BeginForm())
            {
                <div class="row">

                    <!-- Section - School Details ---------------------------------------->
                    <div class="col-md-8 mx-auto">
                        <div class="wrap-Avatar" style="color:#f3efe9">
                            <div class="wrap-login100">
                                @Html.AntiForgeryToken()
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                                @*   Img Input Had To be removed  *@
                                @*<div class="wrap-avabox text-center">
                                    @Html.EditorFor(model => model.Image, new { htmlAttributes = new { @class = "input100", placeholder = "Image" } })
                                    @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
                                </div>
                                <p style="color:#909090">Image File</p>*@
                                <div class="wrap-avabox text-center">
                                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "input100", placeholder = "Name" } })
                                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                </div>
                                <p style="color:#909090">Name</p>
                                <div class="wrap-avabox text-center">
                                    @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "input100", placeholder = "City" } })
                                    @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                                </div>
                                <p style="color:#909090">City</p>
                                <div class="wrap-avabox text-center">
                                    @Html.EditorFor(model => model.Adress, new { htmlAttributes = new { @class = "input100", placeholder = "Address" } })
                                    @Html.ValidationMessageFor(model => model.Adress, "", new { @class = "text-danger" })
                                </div>
                                <p style="color:#909090">Address</p>
                                <div class="wrap-avabox text-center">
                                    @Html.EditorFor(model => model.Tel, new { htmlAttributes = new { @class = "input100", placeholder = "Telephone" } })
                                    @Html.ValidationMessageFor(model => model.Tel, "", new { @class = "text-danger" })
                                </div>
                                <p style="color:#909090">Telephone</p>

                            </div>
                        </div>
                    </div>

                    @*Create Something side Parallax*@
                    <div class="col-md-4 mx-auto">
                        <div class="sideImage" id="p_container">
                            <img class="stackImages" src="~/images/parallax/Portrait_base_01.png">
                            <img style="bottom:-20px" class="stackImages_corr P_child" id="slidetwo" src="~/images/parallax/Portrait_hand_02.png">
                            <img style="bottom:0px" class="stackImages p_child" id="slideone" src="~/images/parallax/Portrait_body_02.png">
                        </div>
                    </div>

                    <div class="col-md-12 mx-auto">

                        @* <Google Maps Start Here>  *@

                        <div class="sideFrame">
                            <div id="gmap" style="width:100%;height:400px;"></div> @*The Map Will Be Displayed*@
                            <input name='start' id='origin-input' class='input100' type='text' placeholder='Give School Location'> @*Input With AutoComplete From GoogleAPI*@
                            <input type="text" name="PlaceId" id="PlaceId" value="" hidden /> @*this Will Hold The Value Of Place So Controller Can Save it To DB*@
                        </div>
                        @* </Google Maps Start Here> *@


                        <br />
                        <div class="container-login100-form-btn m-t-20">
                            <input class="login100-form-btn" type="submit" value="Create" />
                        </div>

                        <section id="socialLoginForm" class="text-center">
                            <br />
                            <hr />
                            <div id="dark_back_C">
                                <a href="@Url.Action("Index", "School")"><img id="iconBtn" src="~/images/UIcons/schools_off.png" /> back to schools </a>
                            </div>
                        </section>

                    </div>

                </div>
            }
        </div>
    </div>
</div>



@*                            BETA GMAPS API                                        *@

<script type="text/javascript">


    function initMap() {
        var map = new google.maps.Map(document.getElementById('gmap'), {
            center: { lat: 40.674, lng: -73.945 },
            zoom: 12,
            styles: [
                {
                    elementType: "geometry",
                    stylers: [
                        {
                            "color": "#ebe3cd"
                        }
                    ]
                },
                {
                    elementType: "labels.text.fill",
                    stylers: [
                        {
                            "color": "#523735"
                        }
                    ]
                },
                {
                    elementType: "labels.text.stroke",
                    stylers: [
                        {
                            "color": "#f5f1e6"
                        }
                    ]
                },
                {
                    featureType: "administrative",
                    elementType: "geometry.stroke",
                    stylers: [
                        {
                            "color": "#c9b2a6"
                        }
                    ]
                },
                {
                    featureType: "administrative.land_parcel",
                    elementType: "geometry.stroke",
                    stylers: [
                        {
                            "color": "#dcd2be"
                        }
                    ]
                },
                {
                    featureType: "administrative.land_parcel",
                    elementType: "labels",
                    stylers: [
                        {
                            "visibility": "off"
                        }
                    ]
                },
                {
                    featureType: "administrative.land_parcel",
                    elementType: "labels.text.fill",
                    stylers: [
                        {
                            "color": "#ae9e90"
                        }
                    ]
                },
                {
                    featureType: "landscape.natural",
                    elementType: "geometry",
                    stylers: [
                        {
                            "color": "#dfd2ae"
                        }
                    ]
                },
                {
                    featureType: "poi",
                    elementType: "geometry",
                    stylers: [
                        {
                            "color": "#dfd2ae"
                        }
                    ]
                },
                {
                    featureType: "poi",
                    elementType: "labels.text",
                    stylers: [
                        {
                            "visibility": "off"
                        }
                    ]
                },
                {
                    featureType: "poi",
                    elementType: "labels.text.fill",
                    stylers: [
                        {
                            "color": "#93817c"
                        }
                    ]
                },
                {
                    featureType: "poi.business",
                    stylers: [
                        {
                            "visibility": "off"
                        }
                    ]
                },
                {
                    featureType: "poi.park",
                    elementType: "geometry.fill",
                    stylers: [
                        {
                            "color": "#a5b076"
                        }
                    ]
                },
                {
                    featureType: "poi.park",
                    elementType: "labels.text.fill",
                    stylers: [
                        {
                            "color": "#447530"
                        }
                    ]
                },
                {
                    featureType: "road",
                    elementType: "geometry",
                    stylers: [
                        {
                            "color": "#f5f1e6"
                        }
                    ]
                },
                {
                    featureType: "road",
                    elementType: "labels.icon",
                    stylers: [
                        {
                            "visibility": "off"
                        }
                    ]
                },
                {
                    featureType: "road.arterial",
                    elementType: "geometry",
                    stylers: [
                        {
                            "color": "#fdfcf8"
                        }
                    ]
                },
                {
                    featureType: "road.arterial",
                    elementType: "labels",
                    stylers: [
                        {
                            "visibility": "off"
                        }
                    ]
                },
                {
                    featureType: "road.highway",
                    elementType: "geometry",
                    stylers: [
                        {
                            "color": "#f8c967"
                        }
                    ]
                },
                {
                    featureType: "road.highway",
                    elementType: "geometry.stroke",
                    stylers: [
                        {
                            "color": "#e9bc62"
                        }
                    ]
                },
                {
                    featureType: "road.highway",
                    elementType: "labels",
                    stylers: [
                        {
                            "visibility": "off"
                        }
                    ]
                },
                {
                    featureType: "road.highway.controlled_access",
                    elementType: "geometry",
                    stylers: [
                        {
                            "color": "#e98d58"
                        }
                    ]
                },
                {
                    featureType: "road.highway.controlled_access",
                    elementType: "geometry.stroke",
                    stylers: [
                        {
                            "color": "#db8555"
                        }
                    ]
                },
                {
                    featureType: "road.local",
                    stylers: [
                        {
                            "visibility": "off"
                        }
                    ]
                },
                {
                    featureType: "road.local",
                    elementType: "labels",
                    stylers: [
                        {
                            "visibility": "off"
                        }
                    ]
                },
                {
                    featureType: "road.local",
                    elementType: "labels.text.fill",
                    stylers: [
                        {
                            "color": "#806b63"
                        }
                    ]
                },
                {
                    featureType: "transit",
                    stylers: [
                        {
                            "visibility": "off"
                        }
                    ]
                },
                {
                    featureType: "transit.line",
                    elementType: "geometry",
                    stylers: [
                        {
                            "color": "#dfd2ae"
                        }
                    ]
                },
                {
                    featureType: "transit.line",
                    elementType: "labels.text.fill",
                    stylers: [
                        {
                            "color": "#8f7d77"
                        }
                    ]
                },
                {
                    featureType: "transit.line",
                    elementType: "labels.text.stroke",
                    stylers: [
                        {
                            "color": "#ebe3cd"
                        }
                    ]
                },
                {
                    featureType: "transit.station",
                    elementType: "geometry",
                    stylers: [
                        {
                            "color": "#dfd2ae"
                        }
                    ]
                },
                {
                    featureType: "water",
                    elementType: "geometry.fill",
                    stylers: [
                        {
                            "color": "#b9d3c2"
                        }
                    ]
                },
                {
                    featureType: "water",
                    elementType: "labels.text.fill",
                    stylers: [
                        {
                            "color": "#92998d"
                        }
                    ]
                }
            ]
        });
        new AutocompleteDirectionsHandler(map);
    }
    function AutocompleteDirectionsHandler(map) {
        this.map = map;
        this.originPlaceId = null;
        this.destinationPlaceId = null;
        this.travelMode = 'DRIVING';//αλλαγη τροπου μεταφορας σε αυτοκινητο
        var originInput = document.getElementById('origin-input');
        var destinationInput = document.getElementById('destination-input');
        this.directionsService = new google.maps.DirectionsService;
        this.directionsDisplay = new google.maps.DirectionsRenderer;
        this.directionsDisplay.setMap(map);
        var originAutocomplete = new google.maps.places.Autocomplete(originInput, { placeIdOnly: true });
        var destinationAutocomplete = new google.maps.places.Autocomplete(destinationInput, { placeIdOnly: true });


        this.setupPlaceChangedListener(originAutocomplete, 'ORIG');
        this.setupPlaceChangedListener(destinationAutocomplete, 'DEST');

    }
    AutocompleteDirectionsHandler.prototype.setupPlaceChangedListener = function (autocomplete, mode) {
        var me = this;
        autocomplete.bindTo('bounds', this.map);
        autocomplete.addListener('place_changed', function () {

            var place = autocomplete.getPlace();//returns Choosen Place
            me.originPlaceId = place.place_id;//το place_id που αντιστοιχει στην επιλεγμεντη τοποθεσια
            me.route();
        });
    };
    AutocompleteDirectionsHandler.prototype.route = function () {
        var me = this;
        this.directionsService.route(
            {
                origin: { 'placeId': this.originPlaceId },
                destination: { 'placeId': this.originPlaceId },
                travelMode: this.travelMode
            }, function (response, status) {


                //First
                me.directionsDisplay.setDirections(response);
                $('#PlaceId').attr("value", response.geocoded_waypoints[0].place_id);
                //bounds = new google.maps.LatLngBounds();

                //var service = new google.maps.places.PlacesService(map);
                //service.getDetails({
                //    placeId: response.geocoded_waypoints[0].place_id
                //}, function (result, status) {
                //    var marker = new google.maps.Marker({
                //        map: map,
                //        place: {
                //            placeId: result.place_id,
                //            location: result.geometry.location
                //        }
                //    });

                //    //loc = new google.maps.LatLng(marker.position.lat(), marker.position.lng());
                //    //bounds.extend(loc);

                //});
                //map.fitBounds(bounds);
                //map.panToBounds(bounds);
                //console.log(response.geocoded_waypoints[0].place_id);
                //console.log(me.directionsDisplay);
            });
    };
</script>


<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCucoJw77Lpe1D97ZE4Nin_yakyZ_npPgs&libraries=places&callback=initMap" async defer></script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}