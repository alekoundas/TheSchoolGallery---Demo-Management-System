@model Web_DomainClasses.ViewModels.StudentCreateVM

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Student</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Student.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Student.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Student.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Student.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Student.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Student.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Student.Age, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Student.Age, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Student.Age, "", new { @class = "text-danger" })
            </div>
        </div>


        @* Alex TheBuilder: Classrooms  Drop Down List (αργοτερα θα γινει με ajax η ανανεωση αναμεσα στις 2 λιστες)  *@
        <div class="form-group">
            <div class="col-md-10">

                @*//School Dropdown*@
                @Html.LabelFor(model => model.Schools, htmlAttributes: new { @class = "control-label col-md-2" })
                <select name="SelectedSchoolID" id="SelectedSchoolID" onchange="UpdateClassroomDropDown()">
                    @for (int i = 0; i < Model.Schools.Count; i++)
                    {
                        <option value="@Model.Schools.ElementAt(i).SchoolId">@Model.Schools.ElementAt(i).Name</option>
                    }
                </select>


                @* Classroom Dropdown *@
                @Html.LabelFor(model => model.Classrooms, htmlAttributes: new { @class = "control-label col-md-2" })
              <div id="ClassroomDropdown"></div>         
                        
            </div>


        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<script>
    function UpdateClassroomDropDown() {
        var DropdownVal = $('#SelectedSchoolID').val();   
        console.log(DropdownVal);
        $.ajax({    
        datatype: "text/plain",
        type: "POST",
        url: '/Student/UpdateDropDownList/?SchoolID='+DropdownVal,
        cache: false,
            success: function (data) {
                console.log(data);
                $('#ClassroomDropdown').html(data);
            }
        });


    }
</script>



@*//@Url.Action("UpdateDropDownList")*@