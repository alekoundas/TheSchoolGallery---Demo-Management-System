@model Web_DomainClasses.ViewModels.StudentCreateVM

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Student</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Student.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Student.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Student.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Student.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Student.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Student.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Student.Age, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Student.Age, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Student.Age, "", new { @class = "text-danger" })
            </div>
        </div>


        @* Alex TheBuilder: Classrooms  Drop Down List (αργοτερα θα γινει με ajax η ανανεωση αναμεσα στις 2 λιστες)  *@
    <div class="form-group">
        @Html.LabelFor(model => model.Classrooms, htmlAttributes: new { @class = "control-label col-md-2" })

        <div class="col-md-10">
            <select name="SelectedClassroomID">
                @for (int i = 0; i < Model.Classrooms.Count; i++)
                {
                    <option value="@Model.Classrooms.ElementAt(i).ClassroomId">@Model.Classrooms.ElementAt(i).Name</option>

                }

            </select>
        </div>
        @* Alex TheBuilder: Schools  Drop Down List (αργοτερα θα γινει με ajax η ανανεωση αναμεσα στις 2 λιστες)  *@
        @Html.LabelFor(model => model.Schools, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <select name="SelectedSchoolID">
                @for (int i = 0; i < Model.Schools.Count; i++)
                {
                    <option value="@Model.Schools.ElementAt(i).SchoolId">@Model.Schools.ElementAt(i).Name</option>
                }

            </select>
        </div>
    </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
